
예제 1. Simple
==================

실시간 전략(RTS, Real-time Strategy) 시뮬레이션 게임에서는 게임마다 다양한 전략들이 있고,
그 전략들은 흔히 유닛 생산순서를 의미하는 빌드오더(build-order)로 대응된다.
빌드오더는 특정한 시점에 상대방보다 우위의 전력을 보유할 수 있도록 고안된 게임 초반 유닛 생산순서를 
의미한다. 두 플레이어가 각각 어떤 전략/빌드오더를 선택했느냐에 따라, 서로에 대해 우위를 점하는 시점과 
정도가 달라지기 때문에, 게임 초반에 어떤 빌드오더를 따르고, 어느 시점에 공격할지를 결정하는 것은
RTS에서 가장 기본적이고 중요한 결정 사항 중 하나이다.
이 게임은 많은 부분이 간략화 되었지만, 유닛 생산을 플레이어가 직접 결정해야 하기 때문에
빌드오더 선택과 공격 시점을 결정하는 것은 여전히 가장 중요한 결정 사항이다.

예제 1. Simple은 유닛을 생산하고, 공격명령을 내리는 등의 아주 기본적인 게임 플레이를 할 수 있는
방법을 보여주는 AI이다. AI 내부에 빌드오더(self.build_order)를 가지고 있고,
빌드오더가 비어있으면, 해병(marine) 5과 의료선(medivac) 1를 추가하도록 되어있다.

.. literalinclude:: bot.py
   :lines: 33-39

매 스텝마다, 빌드오더에서 첫 번째 유닛 생산 가능하면, 사령부에서 생산한다.

.. literalinclude:: bot.py
   :lines: 41-52

생산된 아래 규칙에 따라 각각의 액션을 결정한다.

.. literalinclude:: bot.py
   :lines: 54-88

Simple은 빌드오더를 구현할 수 있는 가장 간단한 예 중 하나이다.
빌드오더가 너무 간단하고, 하드코딩되어 있어 상황변화에 대응할 수 없다는 단점이 있다.
또한 유닛은 생산되자마자 가장 가까운 적 유닛이나 적 사령부에 공격을 시도하기 때문에,
승률이 매우 낮을 수 밖에 없다.





